{"version":3,"sources":["builtin_lib/http.js"],"names":[],"mappings":"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","file":"builtin_lib/http.js","sourcesContent":["const lib = require('../lib')\nconst http = require('http')\nconst https = require('https')\nconst url = require('url')\n\nexport class LHTTPServerResponse extends lib.LObject {\n  constructor(res) {\n    super()\n    this['__constructor__'] = LHTTPServerResponse\n    this.res = res\n  }\n}\n\nlet LHTTPServerResponsePrototype = {\n  write: new lib.LFunction(function(self, [what]) {\n    self.res.write(lib.toJString(what))\n  }),\n  end: new lib.LFunction(function(self) {\n    self.res.end()\n  })\n}\n\nLHTTPServerResponse['__prototype__'] = LHTTPServerResponsePrototype\nLHTTPServerResponse['__super__'] = lib.LObject\n\nexport class LHTTPServerRequest extends lib.LObject {\n  constructor(req) {\n    super()\n    this['__constructor__'] = LHTTPServerRequest\n    this.req = req\n  }\n}\n\nlet LHTTPServerRequestPrototype = {\n  url: new lib.LFunction(function(self) {\n    return lib.toLString(self.req.url)\n  }),\n  method: new lib.LFunction(function(self) {\n    return lib.toLString(self.req.method)\n  })\n}\n\nLHTTPServerRequest['__prototype__'] = LHTTPServerRequestPrototype\nLHTTPServerRequest['__super__'] = lib.LObject\n\nexport class LHTTPServer extends lib.LObject {\n  constructor(handle) {\n    super()\n    this['__constructor__'] = LHTTPServer\n\n    this.server = http.createServer(function(req, res) {\n      lib.call(handle, [\n        new LHTTPServerRequest(req), new LHTTPServerResponse(res)])\n    })\n  }\n}\n\nlet LHTTPServerPrototype = {\n  listen: new lib.LFunction(function(self, [port]) {\n    port = lib.toJNumber(port)\n    self.server.listen(port)\n  })\n}\n\nLHTTPServer['__prototype__'] = LHTTPServerPrototype\nLHTTPServer['__super__'] = lib.LObject\n\nexport class LHTTPRequest extends lib.LObject {\n  constructor(method, url, callback) {\n    super()\n    this['__constructor__'] = LHTTPRequest\n    this.method = method\n    this.url = url\n    this.cb = callback\n  }\n}\n\n\nlet LHTTPRequestPrototype = {\n  send: new lib.LFunction(function(self) {\n    let handle = function(response) {\n      let body = ''\n      response.setEncoding('utf8')\n      response.on('data', function(d) {\n        body += d.toString()\n      })\n      response.on('end', function() {\n        lib.call(self.cb, [lib.toLString(body)])\n      })\n    }\n\n    let u = url.parse(lib.toJString(self.url))\n    let isGet = lib.toJString(self.method).toLowerCase() === 'get'\n    if (u.protocol === 'http:') {\n      if (isGet) {\n        http.get(lib.toJString(self.url), handle)\n      } else {\n        console.log('Invalid method:', lib.toJString(self.method))\n      }\n    } else if (u.protocol === 'https:') {\n      if (isGet) {\n        https.get(lib.toJString(self.url), handle)\n      } else {\n        console.log('Invalid method:', lib.toJString(self.method))\n      }\n    } else {\n      console.log('Invalid protocol:', u.protocol)\n    }\n  })\n}\n\nLHTTPRequest['__prototype__'] = LHTTPRequestPrototype\nLHTTPRequest['__super__'] = lib.LObject\n\nexport let server = new lib.LFunction(function([handle]) {\n  return new LHTTPServer(handle)\n})\n\nexport let request = new lib.LFunction(function([method, url, callback]) {\n  return new LHTTPRequest(method, url, callback)\n})\n"],"sourceRoot":"/source/"}